name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: |
          npm test || echo "No unit tests found"
          npx playwright install --with-deps
          npx playwright test

      - name: Build project
        run: |
          if [ -f "tsconfig.json" ]; then
            npx tsc
          fi
          echo "Build completed"

      - name: Get version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          fi

      - name: Create release notes
        id: release_notes
        run: |
          # Generate release notes from commits since last tag
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -n "$LAST_TAG" ]; then
            CHANGES=$(git log $LAST_TAG..HEAD --oneline --pretty=format:"- %s")
          else
            CHANGES=$(git log --oneline --pretty=format:"- %s")
          fi
          
          cat > release_notes.md << EOF
          ## What's Changed
          
          $CHANGES
          
          **Full Changelog**: https://github.com/${{ github.repository }}/compare/$LAST_TAG...v${{ steps.version.outputs.version }}
          EOF

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: Release v${{ steps.version.outputs.version }}
          body_path: release_notes.md
          draft: false
          prerelease: ${{ contains(steps.version.outputs.version, '-') }}

      - name: Upload test reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: release-test-reports
          path: |
            playwright-report/
            test-results/
          retention-days: 90 